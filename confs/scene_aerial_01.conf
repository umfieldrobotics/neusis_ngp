conf {
    dataset =  scene_aerial_01 
    image_setkeyname = "images" 
    expID =   scene_aerial_01 
    timef = False
    filter_th = 0
    use_manual_bound = True
}


train {
    learning_rate = 5e-2
    learning_rate_alpha = 0.03 # for linear mode:  (1-0.01)**100 ~ 0.37; (1-0.02)**100 ~ 0.13; (1-0.03)**100 ~ 0.05
    learning_rate_decay_mode="linear" # "cos"
    end_iter = 60000
    start_iter = 0 

    warm_up_end = 1000 
    anneal_end = 10000 
    select_valid_px = False

    save_freq = 100
    val_mesh_freq = 100
    report_freq = 1

    igr_weight = 0.01
    variation_reg_weight = 0
    bathy_weight = 0.0#0.01#5.0
    intensity_weight = 100#5.0#5.0


    arc_n_samples = 10#40   #(4**progress * self.arc_n_samples_copy)
    select_px_method = "allbins" 
    num_select_pixels = 100
    num_select_beams = 2#8#32#100 if its' all bins it is used
    px_sample_min_weight = 0.001
    randomize_points = True
    percent_select_true = 0.25
    r_div = False 
}


mesh { 
    object_bbox_min = [-3.25, -11, -2.25]  
    object_bbox_max = [4, 8, 3]
    x_max = 50.46272,
    x_min = -50.46272,
    y_max = 50.46272,
    y_min = -50.46272,
    z_max = -4.03,
    z_min = -9.03,
    res = 0.09856,
    level_set = 0
}

model {
    sdf_network {
        d_out = 65
        d_in = 2
        d_hidden = 64
        n_layers = 2 # for hashgrid  # 4 
        skip_in = [1]#NOT USED
        multires = 6
        bias = 0.5# this seems to be important
        scale = 0.01981661#1.0
        geometric_init = True#False
        weight_norm = True# True
        encoding = "hashgrid_tcnn"#"hashgrid_tcnn"#"hashgrid"# "frequency"# "sphere_harmonics"
        degree=3
        desired_resolution=1024 # for hashgrid
        log2_hashmap_size=15
        level_init=4
        steps_per_level=1500
        down_weighting=True

    }

    variance_network {
        init_val = 3
    }

    rendering_network {
        d_feature = 64
        mode = idr
        d_in = 9
        d_out = 1
        d_hidden = 64
        n_layers = 2# for sphere_harmonics # 4
        weight_norm = True
        multires_view = 4
        scale = 0.01981661#1.0
        squeeze_out = True
        encoding = "sphere_harmonics_tcnn"#"sphere_harmonics"#"frequency"#sphere_harmonics
        degree=3
        estimate_beamform_azimuth=False
        beamform_azimuth_kernel_points=30
        estimate_beamform_elevation=False
        beamform_elevation_kernel_points=20

    }

    neus_renderer {
        n_samples = 20#30 #int(3**progress * self.ray_n_samples_copy)
        n_importance = 0 
        n_outside = 0 
        up_sample_steps = 4 # NOT USED     
        perturb = 0
    }
}
